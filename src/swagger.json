{
    "swagger": "2.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Steel project",
        "description": "Steel API"

    },
    "host": "localhost:8006",
    "basePath": "/",
    "tags": [{
            "name": "users",
            "description": "API for users in the system"
        },
        {
            "name": "questions",
            "description": "API for questions in the system"
        },
        {
            "name": "answers",
            "description": "API for answer in the system"
        },
        {
            "name": "programs",
            "description": "API for programs in the system"
        },
        {
            "name": "training_programs",
            "description": "API for training_program in the system"
        },
        {
            "name": "training_matrix",
            "description": "API for training_matrix in the system"
        },
        {
            "name": "user_trainings",
            "description": "API for user_trainings in the system"
        },
        {
            "name": "bookings",
            "description": "API for bookings in the system"
        },
        {
            "name": "trackers",
            "description": "API for trackers in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "security": [{
        "Bearer": []
    }],
    "paths": {
        "/users/info": {
            "put": {
                "summary": "Update user info",
                "tags": [
                    "users"
                ],
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "user info",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "first_name": {
                                "type": "string",
                                "example": "Nguyen"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Phong"
                            },
                            "phone": {
                                "type": "string",
                                "example": "0905111111"
                            },
                            "address": {
                                "type": "string",
                                "example": "TP.HCM"
                            },
                            "avatar": {
                                "type": "avatar url"
                            },
                            "birthday": {
                                "type": "string",
                                "example": "1998-01-01"
                            },
                            "gender": {
                                "type": "string",
                                "example": "male"
                            }
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "450": {
                        "description": ""
                    }
                }
            }
        },
        "/users/info ": {
            "get": {
                "summary": "Get user info",
                "tags": [
                    "users"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "452": {
                        "description": ""
                    }
                }
            }
        },


        "/questions": {
            "post": {
                "summary": "Create question",
                "tags": [
                    "questions"
                ],
                "description": "Create question",

                "parameters": [{
                    "name": "question",
                    "in": "body",
                    "description": "Question that we want to creates",
                    "schema": {
                        "type": "object",
                        "required": [
                            "name",
                            "content",
                            "type"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Question 1"
                            },
                            "content": {
                                "type": "string",
                                "example": "What's your weight?"
                            },
                            "types": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "basic"
                                }
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "410": {
                        "description": "question is existed"
                    }
                }
            }
        },
        "/questions ": {
            "get": {
                "summary": "List all questions",
                "tags": [
                    "questions"
                ],
                "description": "List all questions in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "412": {
                        "description": ""
                    }
                }
            }
        },
        "/questions/{id} ": {
            "get": {
                "summary": "Get questions with id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of questions you want to get",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "413": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/questions/{id}  ": {
            "delete": {
                "summary": "Delete question with id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4",
                    "description": "ID of question you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "411": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/questions/{id}": {
            "put": {
                "summary": "Update question by id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of question",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "question",
                        "in": "body",
                        "description": "question info that we want to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "name update"
                                },
                                "content": {
                                    "type": "string",
                                    "example": "content update"
                                },
                                "types": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "type update"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "412": {
                        "description": ""
                    }
                }
            }
        },


        "/answers": {
            "post": {
                "summary": "Create answer",
                "tags": [
                    "answers"
                ],
                "description": "Create answer",

                "parameters": [{
                    "name": "answer",
                    "in": "body",
                    "description": "Answer that we want to create",
                    "schema": {
                        "type": "object",
                        "required": [
                            "question_id",
                            "name",
                            "content",
                            "points"
                        ],
                        "properties": {
                            "question_id": {
                                "type": "string",
                                "example": "ba8f8d01-d500-4f45-ae26-a1b238fadf4c"
                            },
                            "name": {
                                "type": "string",
                                "example": "answer 1"
                            },
                            "content": {
                                "type": "string",
                                "example": "Content answer 1"
                            },
                            "points": {
                                "type": "integer",
                                "example": "10"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "409": {
                        "description": "question is not exist/ answer is existed"
                    }
                }
            }
        },
        "/answers/submit": {
            "post": {
                "summary": "Submit answer",
                "tags": [
                    "answers"
                ],
                "description": "Submit answer",
                "parameters": [{
                    "name": "answer_ids",
                    "in": "body",
                    "description": "list answer id",
                    "schema": {
                        "type": "object",
                        "required": [
                            "answer_ids"
                        ],
                        "properties": {
                            "answer_ids": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "id answer 1"
                                }
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },

                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "473": {
                        "description": ""
                    }
                }
            }
        },
        "/answers/list": {
            "get": {
                "summary": "List answers",
                "tags": [
                    "answers"
                ],
                "description": "List answers",
                "parameters": [{
                    "name": "answer_ids",
                    "in": "query",
                    "description": "list answer id",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "id answer 1"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "422": {
                        "description": ""
                    }
                }
            }
        },
        "/answers/{id}": {
            "get": {
                "summary": "List answer with id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of answer you want to get",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "405": {
                        "description": "answer not found"
                    }
                }
            }
        },
        "/answers/question/{question_id} ": {
            "get": {
                "summary": "Get answers by question_id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "question_id",
                    "in": "path",
                    "description": "ID of question",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "421": {
                        "description": ""
                    }
                }
            }
        },
        "/answers/{id}  ": {
            "delete": {
                "summary": "Delete answer with id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of answer you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "406": {
                        "description": "answers not found"
                    }
                }
            }
        },
        "/answers/{id} ": {
            "put": {
                "summary": "Update answer by id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of answer",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "answer",
                        "in": "body",
                        "description": "Update info",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "question_id": {
                                    "type": "string",
                                    "example": "question_id update"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "name update"
                                },
                                "content": {
                                    "type": "string",
                                    "example": "Content update"
                                },
                                "points": {
                                    "type": "integer",
                                    "example": "points update"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "453": {
                        "description": "answer not found"
                    }
                }
            }
        },


        "/programs": {
            "post": {
                "summary": "Create program",
                "tags": [
                    "programs"
                ],
                "description": "Create program",

                "parameters": [{
                    "name": "program",
                    "in": "body",
                    "description": "Program that we want to create ",
                    "schema": {
                        "type": "object",
                        "required": [
                            "name",
                            "target",
                            "duration",
                            "goals"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Basics"
                            },
                            "target": {
                                "type": "string",
                                "example": "Beginners"
                            },
                            "duration": {
                                "type": "string",
                                "example": "8 sessions"
                            },
                            "goals": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "1- Belly breathing & ứng dụng vào các bài tập squat, deadlift, overhead press"
                                }
                            },
                            "photos": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "http://abc.jpg"
                                }
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "466": {
                        "description": "program is existed"
                    }
                }
            }
        },
        "/programs ": {
            "get": {
                "summary": "List all programs",
                "tags": [
                    "programs"
                ],
                "description": "List all programs in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "424": {
                        "description": ""
                    }
                }
            }
        },
        "/programs/{id}": {
            "get": {
                "summary": "Get programs with id",
                "tags": [
                    "programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of programs you want to get",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "422": {
                        "description": "program not found"
                    }
                }
            }
        },
        "/programs/{id}  ": {
            "delete": {
                "summary": "Delete program with id",
                "tags": [
                    "programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4",
                    "description": "ID of program"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "423": {
                        "description": "program not found"
                    }
                }
            }
        },
        "/programs/{id} ": {
            "put": {
                "summary": "Update program",
                "tags": [
                    "programs"
                ],
                "description": "Update program",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4",
                        "description": "ID of program"
                    },
                    {
                        "name": "program",
                        "in": "body",
                        "description": "Program info ",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "name update"
                                },
                                "target": {
                                    "type": "string",
                                    "example": "target update"
                                },
                                "duration": {
                                    "type": "string",
                                    "example": "duration update"
                                },
                                "goals": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "Goals update"
                                    }
                                },
                                "photos": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "https://abc.jpg"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "455": {
                        "description": "program is not existed"
                    }
                }
            }
        },


        "/training_programs ": {
            "post": {
                "summary": "Create training_program",
                "tags": [
                    "training_programs"
                ],
                "description": "Create training_program",
                "parameters": [{
                    "name": "training_program",
                    "in": "body",
                    "description": "training_program info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "name",
                            "acronym",
                            "items"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Scapula Movements"
                            },
                            "acronym": {
                                "type": "string",
                                "example": "acronym 1"
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "sets",
                                        "reps",
                                        "tempo",
                                        "rest"
                                    ],
                                    "properties": {
                                        "sets": {
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "reps": {
                                            "type": "string",
                                            "example": "10-12"
                                        },
                                        "tempo": {
                                            "type": "string",
                                            "example": "4010"
                                        },
                                        "rest": {
                                            "type": "string",
                                            "example": "60s"
                                        }
                                    }
                                }

                            }

                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "460": {
                        "description": "traning program is existed"
                    }
                }
            }
        },
        "/training_programs": {
            "get": {
                "summary": "List all training_programs",
                "tags": [
                    "training_programs"
                ],
                "description": "List all training_programs in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "461": {
                        "description": ""
                    }
                }
            }
        },
        "/training_programs/{id}  ": {
            "get": {
                "summary": "List training_program by Id or Name or Acronym",
                "tags": [
                    "training_programs"
                ],
                "description": "List training_program by Id or Name or Acronym",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID or NAME or ACRONYM of training-program",
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "461": {
                        "description": "tranining program not found"
                    }
                }
            }
        },
        "/training_programs/{id} ": {
            "delete": {
                "summary": "Delete training_program with id",
                "tags": [
                    "training_programs"
                ],
                "description": "Delete training_program with id",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of training-program",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "463": {
                        "description": "tranining program not found"
                    }
                }
            }
        },


        "/training_matrix": {
            "post": {
                "summary": "Create training_matrix",
                "tags": [
                    "training_matrix"
                ],
                "description": "Create training_matrix",

                "parameters": [{
                    "name": "training_matrix",
                    "in": "body",
                    "description": "training_matrix info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "program",
                            "items"
                        ],
                        "properties": {
                            "program": {
                                "type": "string",
                                "example": "Basics"
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "day",
                                        "training_program"
                                    ],
                                    "properties": {
                                        "day": {
                                            "type": "string",
                                            "example": "Day 1"
                                        },
                                        "training_program": {
                                            "type": "string",
                                            "example": "SMs"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "462": {
                        "description": "training_matrix is existed/ program not found"
                    }
                }
            }
        },
        "/training_matrix/{id} ": {
            "delete": {
                "summary": "Delete training_matrix by id",
                "tags": [
                    "training_matrix"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of training_matrix",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "464": {
                        "description": "training matrix not found"
                    }
                }
            }
        },
        "/training_matrix/program/{program_id}": {
            "get": {
                "summary": "Get training_matrix by program_ID or program_Name",
                "tags": [
                    "training_matrix"
                ],
                "parameters": [{
                    "name": "program_id",
                    "in": "path",
                    "description": "ID or NAME of program",
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "462": {
                        "description": "training matrix not found"
                    }
                }
            }
        },


        "/user_trainings": {
            "post": {
                "summary": "Create user_training_program_detail",
                "tags": [
                    "user_trainings"
                ],
                "description": "Create user_training_program_detail",

                "parameters": [{
                    "name": "user_training",
                    "in": "body",
                    "description": "user_training_program_detail info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "training_detail_id",
                            "weight"
                        ],
                        "properties": {
                            "training_detail_id": {
                                "type": "string",
                                "example": "user_training 1"
                            },
                            "weight": {
                                "type": "integer",
                                "example": "50"
                            },
                            "note": {
                                "type": "string",
                                "example": "note 1"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "466": {
                        "description": "User training is existed"
                    }
                }
            }
        },
        "/user_trainings ": {
            "get": {
                "summary": "List list training by user",
                "tags": [
                    "user_trainings"
                ],
                "description": "List user_trainings",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "469": {
                        "description": ""
                    }
                }
            }
        },
        "/user_trainings/{training_detail_id} ": {
            "get": {
                "summary": "Get user_training by training_detail_id",
                "tags": [
                    "user_trainings"
                ],
                "description": "Get user_training by training_detail_id",
                "parameters": [{
                    "name": "training_detail_id",
                    "in": "path",
                    "description": "ID of training_detail_id",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "470": {
                        "description": "user training not found"
                    }
                }
            }
        },
        "/user_trainings/{id}": {
            "delete": {
                "summary": "Delete user_training by id",
                "tags": [
                    "user_trainings"
                ],
                "description": "Delete user_training by id",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user_training",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "467": {
                        "description": "user training not found"
                    }
                }
            }
        },
        "/user_trainings/{id} ": {
            "put": {
                "summary": "Update user_training_program_detail by id",
                "tags": [
                    "user_trainings"
                ],
                "description": "Update user_training_program_detail by id",

                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of user_training",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "user_training",
                        "in": "body",
                        "description": "user_training_program_detail info",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "training_detail_id": {
                                    "type": "string",
                                    "example": "user_training update"
                                },
                                "weight": {
                                    "type": "integer",
                                    "example": "50"
                                },
                                "note": {
                                    "type": "string",
                                    "example": "note update"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "471": {
                        "description": "user traning not found"
                    }
                }
            }
        },


        "/bookings": {
            "post": {
                "summary": "Create booking",
                "tags": [
                    "bookings"
                ],
                "description": "Create booking",

                "parameters": [{
                    "name": "booking",
                    "in": "body",
                    "description": "booking that we want to create",
                    "schema": {
                        "type": "object",
                        "required": [
                            "time",
                            "note"
                        ],
                        "properties": {
                            "time": {
                                "type": "string"
                            },
                            "note": {
                                "type": "string"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "426": {
                        "description": "booking is existed"
                    }
                }
            }
        },
        "/bookings ": {
            "get": {
                "summary": "List all bookings",
                "tags": [
                    "bookings"
                ],
                "description": "List all bookings in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "431": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/user": {
            "get": {
                "summary": "Get list bookings by user_id",
                "tags": [
                    "bookings"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "428": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/{id} ": {
            "get": {
                "summary": "Get bookings by id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of booking",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "430": {
                        "description": "booking not found"
                    }
                }
            }
        },
        "/bookings/{id}": {
            "put": {
                "summary": "Update booking by id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of booking",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "booking",
                        "in": "body",
                        "description": "booking info that we want to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time": {
                                    "type": "integer",
                                    "example": "time update"
                                },
                                "note": {
                                    "type": "string",
                                    "example": "note update"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "427": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/{id}  ": {
            "delete": {
                "summary": "Delete booking with id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of booking you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "432": {
                        "description": "booking not found"
                    }
                }
            }
        },



        "/trackers": {
            "post": {
                "summary": "Create tracker",
                "tags": [
                    "trackers"
                ],
                "description": "Create tracker",

                "parameters": [{
                    "name": "tracker",
                    "in": "body",
                    "description": "tracker info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "time",
                            "step",
                            "weight"
                        ],
                        "properties": {
                            "time": {
                                "type": "string"
                            },
                            "step": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "integer"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "437": {
                        "description": "tracker is existed"
                    }
                }
            }
        },
        "/trackers/{id}": {
            "get": {
                "summary": "Get tracker with id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of tracker"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "459": {
                        "description": "tracker not found"
                    }
                }
            }
        },
        "/trackers ": {
            "get": {
                "summary": "List all trackers",
                "tags": [
                    "trackers"
                ],
                "description": "List all trackers in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "441": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/user": {
            "get": {
                "summary": "Get list trackers by user",
                "tags": [
                    "trackers"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "440": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/{id} ": {
            "put": {
                "summary": "Update tracker by id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of tracker",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "tracker",
                        "in": "body",
                        "description": "tracker info that we want to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time": {
                                    "type": "string",
                                    "example": "time update"
                                },
                                "step": {
                                    "type": "integer",
                                    "example": "step update"
                                },
                                "weight": {
                                    "type": "integer",
                                    "example": "weight update"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "442": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/{id}  ": {
            "delete": {
                "summary": "Delete tracker with id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of tracker you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "401": {
                        "description": "UnAuthentication"
                    },
                    "439": {
                        "description": "tracker not found"
                    }
                }
            }
        }
    },

    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}