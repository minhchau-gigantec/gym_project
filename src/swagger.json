{
    "swagger": "2.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Steel project",
        "description": "Steel API"

    },
    "host": "localhost:8006",
    "basePath": "/",
    "tags": [{
            "name": "answers",
            "description": "API for answer in the system"
        },
        {
            "name": "questions",
            "description": "API for questions in the system"
        },
        {
            "name": "bookings",
            "description": "API for bookings in the system"
        },
        {
            "name": "programs",
            "description": "API for programs in the system"
        },
        {
            "name": "schedules",
            "description": "API for schedules in the system"
        },
        {
            "name": "trackers",
            "description": "API for trackers in the system"
        },
        {
            "name": "user_programs",
            "description": "API for user_programs in the system"
        },
        {
            "name": "users",
            "description": "API for users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/answers": {
            "post": {
                "summary": "Create answer",
                "tags": [
                    "answers"
                ],
                "description": "Create answer",

                "parameters": [{
                    "name": "answer",
                    "in": "body",
                    "description": "Answer that we want to create",
                    "schema": {
                        "type": "object",
                        "required": [
                            "question_id",
                            "name",
                            "content",
                            "points"
                        ],
                        "properties": {
                            "question_id": {
                                "type": "string",
                                "example": "ba8f8d01-d500-4f45-ae26-a1b238fadf4c"
                            },
                            "name": {
                                "type": "string",
                                "example": "answer 1"
                            },
                            "content": {
                                "type": "string",
                                "example": "Content answer 1"
                            },
                            "points": {
                                "type": "integer",
                                "example": "10"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "409": {
                        "description": "question is not exist/ answer is existed"
                    }
                }
            }
        },
        "/answers ": {
            "get": {
                "summary": "List all answers",
                "tags": [
                    "answers"
                ],
                "description": "List all answers in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "422": {
                        "description": ""
                    }
                }
            }
        },
        "/answers/{id}": {
            "get": {
                "summary": "List answer with id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of answer you want to get",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "405": {
                        "description": "answer not found"
                    }
                }
            }
        },
        "/answers/question/{question_id} ": {
            "get": {
                "summary": "Get answers by question_id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "question_id",
                    "in": "path",
                    "description": "ID of question",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "421": {
                        "description": ""
                    }
                }
            }
        },
        "/answers/{id}  ": {
            "delete": {
                "summary": "Delete answer with id",
                "tags": [
                    "answers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of answer you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "406": {
                        "description": "answers not found"
                    }
                }
            }
        },


        "/questions": {
            "post": {
                "summary": "Create or update question",
                "tags": [
                    "questions"
                ],
                "description": "Create or update question",

                "parameters": [{
                    "name": "question",
                    "in": "body",
                    "description": "Question that we want to create or update",
                    "schema": {
                        "type": "object",
                        "required": [
                            "name",
                            "content"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Question 1"
                            },
                            "content": {
                                "type": "string",
                                "example": "Content question 1"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "410": {
                        "description": "question is existed"
                    }
                }
            }
        },
        "/questions ": {
            "get": {
                "summary": "List all questions",
                "tags": [
                    "questions"
                ],
                "description": "List all questions in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "412": {
                        "description": ""
                    }
                }
            }
        },
        "/questions/{id} ": {
            "get": {
                "summary": "List questions with id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of questions you want to get",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "413": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/questions/{id}  ": {
            "delete": {
                "summary": "Delete question with id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4",
                    "description": "ID of question you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "411": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/questions/{id}": {
            "put": {
                "summary": "Update question by id",
                "tags": [
                    "questions"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of question",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "question",
                        "in": "body",
                        "description": "question info that we want to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "content": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "412": {
                        "description": ""
                    }
                }
            }
        },


        "/bookings": {
            "post": {
                "summary": "Create booking",
                "tags": [
                    "bookings"
                ],
                "description": "Create booking",

                "parameters": [{
                    "name": "booking",
                    "in": "body",
                    "description": "booking that we want to create",
                    "schema": {
                        "type": "object",
                        "required": [
                            "time",
                            "program_id",
                            "note"
                        ],
                        "properties": {
                            "time": {
                                "type": "string",
                                "example": "10"
                            },
                            "program_id": {
                                "type": "string",
                                "example": "program-id of program"
                            },
                            "note": {
                                "type": "string",
                                "example": "note of program"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "426": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings ": {
            "get": {
                "summary": "List all bookings",
                "tags": [
                    "bookings"
                ],
                "description": "List all bookings in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "431": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/user/{user_id}": {
            "get": {
                "summary": "Get list bookings by user_id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "user_id",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "428": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/{id} ": {
            "get": {
                "summary": "Get bookings by id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of booking",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "430": {
                        "description": "booking not found"
                    }
                }
            }
        },
        "/bookings/{id}": {
            "put": {
                "summary": "Update bookings by id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of booking",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "booking",
                        "in": "body",
                        "description": "booking info that we want to update",
                        "schema": {
                            "type": "object",

                            "properties": {
                                "note": {
                                    "type": "string"
                                },
                                "time": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "427": {
                        "description": ""
                    }
                }
            }
        },
        "/bookings/{id}  ": {
            "delete": {
                "summary": "Delete booking with id",
                "tags": [
                    "bookings"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of booking you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "432": {
                        "description": "booking not found"
                    }
                }
            }
        },


        "/programs": {
            "post": {
                "summary": "Create or update program",
                "tags": [
                    "programs"
                ],
                "description": "Create or update program",

                "parameters": [{
                    "name": "program",
                    "in": "body",
                    "description": "Program that we want to create or update",
                    "schema": {
                        "type": "object",
                        "required": [
                            "name",
                            "min_points",
                            "max_points"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Program 1"
                            },
                            "min_points": {
                                "type": "integer",
                                "example": "10"
                            },
                            "max_points": {
                                "type": "integer",
                                "example": "100"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "422": {
                        "description": "program is existed"
                    }
                }
            }
        },
        "/programs ": {
            "get": {
                "summary": "List all programs",
                "tags": [
                    "programs"
                ],
                "description": "List all programs in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "424": {
                        "description": ""
                    }
                }
            }
        },
        "/programs/{id}": {
            "get": {
                "summary": "List programs with id",
                "tags": [
                    "programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of programs you want to get",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "425": {
                        "description": "program not found"
                    }
                }
            }
        },
        "/programs/{id}  ": {
            "delete": {
                "summary": "Delete program with id",
                "tags": [
                    "programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4",
                    "description": "ID of program you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "423": {
                        "description": "program not found"
                    }
                }
            }
        },


        "/schedules": {
            "post": {
                "summary": "Create schedule",
                "tags": [
                    "schedules"
                ],
                "description": "Create schedule",

                "parameters": [{
                    "name": "schedule",
                    "in": "body",
                    "description": "schedule info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "user_id",
                            "time",
                            "note",
                            "program_id"
                        ],
                        "properties": {
                            "user_id": {
                                "type": "string",
                                "example": "ba8f8d01-d500-4f45-ae26-a1b238fadf4c"
                            },
                            "time": {
                                "type": "string",
                                "example": "10"
                            },
                            "note": {
                                "type": "string",
                                "example": "note of schedule"
                            },
                            "program_id": {
                                "type": "string",
                                "example": "program_id of schedule"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "434": {
                        "description": ""
                    }
                }
            }
        },
        "/schedules ": {
            "get": {
                "summary": "List all schedules",
                "tags": [
                    "schedules"
                ],
                "description": "List all schedules in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "437": {
                        "description": ""
                    }
                }
            }
        },
        "/schedules/user/{user_id}": {
            "get": {
                "summary": "Get list schedules by user_id",
                "tags": [
                    "schedules"
                ],
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "user_id",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "435": {
                        "description": ""
                    }
                }
            }
        },
        "/schedules/{id} ": {
            "get": {
                "summary": "Get schedule by id",
                "tags": [
                    "schedules"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of schedule",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "438": {
                        "description": "booking not found"
                    }
                }
            }
        },
        "/schedules/{id}  ": {
            "delete": {
                "summary": "Delete schedule with id",
                "tags": [
                    "schedules"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of schedule you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "436": {
                        "description": "schedule not found"
                    }
                }
            }
        },


        "/trackers": {
            "post": {
                "summary": "Create tracker",
                "tags": [
                    "trackers"
                ],
                "description": "Create tracker",

                "parameters": [{
                    "name": "tracker",
                    "in": "body",
                    "description": "tracker info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "user_id",
                            "time",
                            "step",
                            "weight"
                        ],
                        "properties": {
                            "user_id": {
                                "type": "string",
                                "example": "ba8f8d01-d500-4f45-ae26-a1b238fadf4c"
                            },
                            "time": {
                                "type": "string"
                            },
                            "step": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "integer"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "437": {
                        "description": "tracker is existed"
                    }
                }
            }
        },
        "/trackers ": {
            "get": {
                "summary": "List all trackers",
                "tags": [
                    "trackers"
                ],
                "description": "List all trackers in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "441": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/user/{user_id}": {
            "get": {
                "summary": "Get list trackers by user_id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "user_id",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "440": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/{id} ": {
            "put": {
                "summary": "Update tracker by id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of tracker",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "tracker",
                        "in": "body",
                        "description": "tracker info that we want to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "string"
                                },
                                "time": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "442": {
                        "description": ""
                    }
                }
            }
        },
        "/trackers/{id}  ": {
            "delete": {
                "summary": "Delete tracker with id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of tracker you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "439": {
                        "description": "tracker not found"
                    }
                }
            }
        },

        "/user_programs": {
            "post": {
                "summary": "Create user_programs",
                "tags": [
                    "user_programs"
                ],
                "description": "Create user_programs",

                "parameters": [{
                    "name": "user_program",
                    "in": "body",
                    "description": "user_program info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "user_id",
                            "program_id"
                        ],
                        "properties": {
                            "user_id": {
                                "type": "string",
                                "example": "user_id of user"
                            },
                            "program_id": {
                                "type": "string",
                                "example": "program_id of user"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "445": {
                        "description": "user_program is existed"
                    }
                }
            }
        },
        "/user_programs ": {
            "get": {
                "summary": "List all user_program",
                "tags": [
                    "user_programs"
                ],
                "description": "List all user_program in database",
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "448": {
                        "description": ""
                    }
                }
            }
        },
        "/user_programs/user/{user_id}": {
            "get": {
                "summary": "Get list trackers by user_id",
                "tags": [
                    "trackers"
                ],
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "user_id",
                    "type": "string",
                    "example": "994cb53f-6ef8-40bc-9d78-58ec9ce53ec4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "447": {
                        "description": ""
                    }
                }
            }
        },
        "/user_programs/{id} ": {
            "get": {
                "summary": "Get user_program by id",
                "tags": [
                    "user_programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user_program",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "449": {
                        "description": "user program not found"
                    }
                }
            }
        },
        "/user_programs/{id}  ": {
            "delete": {
                "summary": "Delete user_program with id",
                "tags": [
                    "user_programs"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "example": "8d960b70-bb50-4102-9a89-48c99a4db7b0",
                    "description": "ID of user_program you want to delete"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "446": {
                        "description": "user program not found"
                    }
                }
            }
        },


        "/users": {
            "post": {
                "summary": "Create user",
                "tags": [
                    "users"
                ],
                "description": "Create user",

                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "user info",
                    "schema": {
                        "type": "object",
                        "required": [
                            "user_id",
                            "first_name",
                            "last_name",
                            "phone",
                            "address",
                            "avatar",
                            "birthday",
                            "gender"
                        ],
                        "properties": {
                            "user_id": {
                                "type": "string",
                                "example": "user_id for auth"
                            },
                            "first_name": {
                                "type": "string",
                                "example": "firstname1"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "lastname1"
                            },
                            "phone": {
                                "type": "string",
                                "example": "0905111111"
                            },
                            "address": {
                                "type": "string",
                                "example": "TP.HCM"
                            },
                            "avatar": {
                                "type": "string"
                            },
                            "birthday": {
                                "type": "date",
                                "example": "2021/15/04"
                            },
                            "gender": {
                                "type": "string",
                                "example": "male"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "451": {
                        "description": ""
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "summary": "Update user by id",
                "tags": [
                    "users"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "type": "string",
                        "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "user info",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "string",
                                    "example": "user_id for auth"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "firstname1"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "lastname1"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "0905111111"
                                },
                                "address": {
                                    "type": "string",
                                    "example": "TP.HCM"
                                },
                                "avatar": {
                                    "type": "string"
                                },
                                "birthday": {
                                    "type": "string",
                                    "example": "2021/15/04"
                                },
                                "gender": {
                                    "type": "string",
                                    "example": "male"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "400": {
                        "description": "validation error"
                    },
                    "450": {
                        "description": ""
                    }
                }
            }
        },
        "/users/{id} ": {
            "get": {
                "summary": "Get user by id",
                "tags": [
                    "users"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user",
                    "type": "string",
                    "example": "e66ae777-0c56-4925-9151-0f1e28b9b4f4"
                }],
                "responses": {
                    "200": {
                        "description": "handler success"
                    },
                    "452": {
                        "description": ""
                    }
                }
            }
        }
    },

    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}